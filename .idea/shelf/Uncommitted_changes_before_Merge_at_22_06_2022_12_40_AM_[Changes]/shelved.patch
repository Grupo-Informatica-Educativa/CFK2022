Index: utils/cleaners/Marco_consolidacion/consolidacion_D7.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 1,\r\n   \"metadata\": {\r\n    \"collapsed\": true,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": true\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"import pandas as pd\\n\",\r\n    \"import pathlib\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": [\r\n    \"## Calificar examen estudiantes: Dimensión 7\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 2,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"ruta_git = pathlib.Path().cwd().parent.parent.parent\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 3,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"(22904, 74)\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"Index(['N registro', 'Deseo participar en el estudio', 'Código IE', 'Grupo',\\n       'Nombre', 'Fecha', 'ID', 'Número de lista', 'Edad', 'Sexo',\\n       'Sector vivienda', 'Internet', 'Uso del dispositivo móvil',\\n       'Nivel escolaridad madre', 'Nivel escolaridad padre', 'Ocupación madre',\\n       'Ocupación padre', '¿Con quién vives?', 'Grado', '1.1. Ingeniería',\\n       '1.2 Matemáticas', '1.3 Educación', '1.4 Medicina',\\n       '1.5 Diseño gráfico', '1.6 Química', '1.7 Enfermería',\\n       '1.8 Desarrollo de software',\\n       '2.1 Soy capaz de sacar buenas notas en esta asignatura',\\n       '2.2 Si me va bien en esta asignatura, me ayudará en mi futura ocupación',\\n       '2.3 A mis padres les gustaría que eligiera un futuro profesional relacionado a esta asignatura',\\n       '2.4 Sé de alguien en mi familia que utiliza conocimientos relacionados a esta asignatura en su ocupación',\\n       'Comentarios 1-2', 'Un algoritmo es:',\\n       '¿Para qué sirven los algoritmos?', 'Un bucle es:',\\n       '3.1 Siento que soy capaz de explicar lo que es el pensamiento computacional',\\n       '3.2 Siento que puedo enumerar las sub-habilidades que componen el pensamiento computacional',\\n       '3.3 Siento que soy capaz de dar ejemplos para explicar las sub-habilidades del pensamiento computacional',\\n       '3.4 Siento que puedo explicar la forma en que las sub-habilidades del pensamiento computacional se correlacionan con la programación',\\n       '3.5 Siento que puedo analizar un ejercicio y determinar qué sub-habilidades de pensamiento computacional busca desarrollar',\\n       '3.6 Siento que puedo resolver problemas a través de programación',\\n       '3.7 Siento que puedo implementar algoritmos',\\n       '3.8 Siento que puedo crear un programa de computador',\\n       '3.9 Siento que puedo automatizar tareas a través de la programación',\\n       '3.10 Siento que puedo utilizar la computación para resolver problemas simples',\\n       'Comentarios P3',\\n       '¿Cuál de las siguientes opciones sí le permite al robot completar la misión de fotografiar cada tortuga?',\\n       '¿Qué mensaje deseaba enviar la líder Wayuú?',\\n       '¿Cuál de los siguientes códigos permite que el robot complete su misión sembrando café?',\\n       '¿Cuál será la foto con más vistas?',\\n       'Ayuda al robot verde a salir del laberinto',\\n       'Óscar lleva 2 loncheras a la escuela todos los días ¿Cuál de las siguientes afirmaciones es falsa?',\\n       '¿Cuál de las siguientes hamburguesas tiene los ingredientes A, E y F?',\\n       '¿Qué botella debe cambiarse de color para que el resultado final sea una botella de color blanco?',\\n       'Comentarios conocimiento',\\n       '5.1 ¿Quién crees que ganará el concurso de matemáticas?',\\n       '5.2 ¿Quién crees que es capitán del barco?',\\n       '5.3 ¿Quién es la persona excluida de la construcción de la casa de madera?',\\n       '5.4 ¿Quién crees que es el personaje que está sentado y esperando junto a la ventana?',\\n       '5.5 ¿Quién es la persona que trabaja en educación?',\\n       '5.6 ¿Quién crees que es la persona que prefiere estudiar ingeniería?',\\n       'Comentarios género',\\n       '4.1 Es alarmante que el ritmo de desaparición de especies en la Amazonia Colombiana sea cada vez mayor.',\\n       '4.2 El aumento de la temperatura atmosférica se debe al uso creciente y continuado de combustibles fósiles (carbón, petróleo…).',\\n       '4.3 La acumulación de basura procedente de las ciudades es un problema realmente grave.',\\n       '4.4 Hay una disminución de la superficie forestal y de áreas naturales en el país.',\\n       '4.5 El planeta está tan contaminado por productos químicos que ya supone un problema para la salud.',\\n       '4.6 Conozco los riesgos que representa para la vida humana la desaparición de especies animales y vegetales.',\\n       '4.7 Me preocupa lo que sucede con la tala de árboles.',\\n       'Comentarios medioambiente', 'Tipo de discapacidad',\\n       '¿Te reconoces como una persona con algún tipo de discapacidad?',\\n       'Conoce GreenTIC', 'Instrumento'],\\n      dtype='object')\"\r\n     },\r\n     \"execution_count\": 3,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"est = pd.read_excel(ruta_git/'data/descargables/EstudiantesCFK.xlsx')\\n\",\r\n    \"\\n\",\r\n    \"print(est.shape)\\n\",\r\n    \"est.columns\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": [\r\n    \"##### Pasar respuestas a números\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%% md\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 4,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"respuestas_correctas = {\\n\",\r\n    \"    \\\"Un algoritmo es:\\\":\\\"Una secuencia lógica de pasos para realizar una tarea\\\",\\n\",\r\n    \"    \\\"¿Para qué sirven los algoritmos?\\\":\\\"Para planificar la solución a un problema\\\",\\n\",\r\n    \"    \\\"Un bucle es:\\\":\\\"Un conjunto de instrucciones que se ejecuta mientras se cumpla una condición\\\",\\n\",\r\n    \"    \\\"¿Cuál de las siguientes opciones sí le permite al robot completar la misión de fotografiar cada tortuga?\\\":\\\"a.\\\",\\n\",\r\n    \"    \\\"¿Qué mensaje deseaba enviar la líder Wayuú?\\\":\\\"c. Nublado\\\",\\n\",\r\n    \"    \\\"¿Cuál de los siguientes códigos permite que el robot complete su misión sembrando café?\\\":\\\"a.\\\",\\n\",\r\n    \"    \\\"¿Cuál será la foto con más vistas?\\\":\\\"c) Julio\\\",\\n\",\r\n    \"    \\\"Ayuda al robot verde a salir del laberinto\\\":\\\"b.\\\",\\n\",\r\n    \"    \\\"Óscar lleva 2 loncheras a la escuela todos los días ¿Cuál de las siguientes afirmaciones es falsa?\\\":\\\"c) Si Óscar empaca Deditos para merendar, puede hacer Arroz de pollo para almorzar\\\",\\n\",\r\n    \"    \\\"¿Cuál de las siguientes hamburguesas tiene los ingredientes A, E y F?\\\":\\\"a.\\\",\\n\",\r\n    \"    \\\"¿Qué botella debe cambiarse de color para que el resultado final sea una botella de color blanco?\\\":\\\"a) La botella B debe ser verde\\\"}\\n\",\r\n    \"\\n\",\r\n    \"de_acuerdo = {\\\"Totalmente en desacuerdo\\\":1,\\\"En desacuerdo\\\":2, \\\"Neutro\\\":3,\\n\",\r\n    \"\\\"De acuerdo\\\":4,\\\"Totalmente de acuerdo\\\":5}\\n\",\r\n    \"\\n\",\r\n    \"interesa_carreras = {\\\"No la conozco\\\":0,\\\"La evitaría\\\":1,\\\"Me interesa poco\\\":2,\\\"Está entre mis preferidas\\\":3}\\n\",\r\n    \"\\n\",\r\n    \"estereotipo_h = {'a) Seguramente un hombre':2, 'b) Quizás un hombre':1,\\n\",\r\n    \"                 'c) Creo que puede ser un hombre o una mujer':0,\\n\",\r\n    \"                 'd) Quizás una mujer': -1, 'e) Seguramente una mujer':-2}\\n\",\r\n    \"\\n\",\r\n    \"estereotipo_m = {'a) Seguramente un hombre':-2, 'b) Quizás un hombre':-1,\\n\",\r\n    \"                 'c) Creo que puede ser un hombre o una mujer':0,\\n\",\r\n    \"                 'd) Quizás una mujer': 1, 'e) Seguramente una mujer':2}\\n\",\r\n    \"#The scores range from -2= ‘counter- stereotypic answer’ to 2= ‘stereotype congruent answer’ for all items.\\n\",\r\n    \"genero_estereotipos = {'5.1 ¿Quién crees que ganará el concurso de matemáticas?':estereotipo_h,\\n\",\r\n    \"                       '5.2 ¿Quién crees que es capitán del barco?':estereotipo_h,\\n\",\r\n    \"                       '5.3 ¿Quién es la persona excluida de la construcción de la casa de madera?':estereotipo_m,\\n\",\r\n    \"                       '5.4 ¿Quién crees que es el personaje que está sentado y esperando junto a la ventana?':estereotipo_m,\\n\",\r\n    \"                       '5.5 ¿Quién es la persona que trabaja en educación?':estereotipo_m,\\n\",\r\n    \"                       '5.6 ¿Quién crees que es la persona que prefiere estudiar ingeniería?':estereotipo_h}\\n\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 5,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"['5.1 ¿Quién crees que ganará el concurso de matemáticas?',\\n '5.2 ¿Quién crees que es capitán del barco?',\\n '5.3 ¿Quién es la persona excluida de la construcción de la casa de madera?',\\n '5.4 ¿Quién crees que es el personaje que está sentado y esperando junto a la ventana?',\\n '5.5 ¿Quién es la persona que trabaja en educación?',\\n '5.6 ¿Quién crees que es la persona que prefiere estudiar ingeniería?']\"\r\n     },\r\n     \"execution_count\": 5,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"col_index = ['Edad', 'Sexo', 'Código IE', '¿Te reconoces como una persona con algún tipo de discapacidad?']\\n\",\r\n    \"col_caract = ['N registro','Edad', 'Sexo', 'Sector vivienda', 'Internet', 'Uso del dispositivo móvil',\\n\",\r\n    \"              'Nivel escolaridad madre', 'Nivel escolaridad padre', 'Ocupación madre',\\n\",\r\n    \"              'Ocupación padre', '¿Con quién vives?', 'Grado', 'Código IE',\\n\",\r\n    \"              'Grupo', 'Conoce GreenTIC', 'Número de lista', '¿Te reconoces como una persona con algún tipo de discapacidad?']\\n\",\r\n    \"#col_conocePC = est.filter(regex=r'^3.*', axis=1).columns.tolist()[0]\\n\",\r\n    \"#col_PC = est.filter(regex=r'^3.*', axis=1).columns.tolist()[1:5]\\n\",\r\n    \"col_autoeficacia = est.filter(regex=r'^3.*', axis=1).columns.tolist()\\n\",\r\n    \"col_carreras = est.filter(regex=r'^1.', axis=1).columns.tolist()\\n\",\r\n    \"col_interes = est.filter(regex=r'^2.1|2.2', axis=1).columns.tolist()\\n\",\r\n    \"col_conocimiento = list(respuestas_correctas.keys())\\n\",\r\n    \"col_ambiental = est.filter(regex=r'^4.', axis=1).columns.tolist()\\n\",\r\n    \"col_genero = est.filter(regex=r'^5.', axis=1).columns.tolist()\\n\",\r\n    \"col_genero\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 6,\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"      N registro  Edad       Sexo Sector vivienda Internet  \\\\\\n0              1    14  Masculino          Urbana       Sí   \\n1              2    16  Masculino          Urbana       Sí   \\n2              3    14   Femenino          Urbana       Sí   \\n3              4    15  Masculino          Urbana       No   \\n4              5    14   Femenino          Urbana       Sí   \\n...          ...   ...        ...             ...      ...   \\n22899      D2012    15  Masculino          Urbana       No   \\n22900      D2013    15  Masculino          Urbana       No   \\n22901      D2014    15   Femenino          Urbana       Sí   \\n22902      D2015    15  Masculino          Urbana       No   \\n22903      D2016    13  Masculino          Urbana       Sí   \\n\\n                              Uso del dispositivo móvil  \\\\\\n0                          Uso propio (solo lo usas tú)   \\n1                          Uso propio (solo lo usas tú)   \\n2                     Uso compartido con otras personas   \\n3      No tengo acceso a ningún dispositivo electrónico   \\n4                     Uso compartido con otras personas   \\n...                                                 ...   \\n22899  No tengo acceso a ningún dispositivo electrónico   \\n22900  No tengo acceso a ningún dispositivo electrónico   \\n22901                 Uso compartido con otras personas   \\n22902                 Uso compartido con otras personas   \\n22903                 Uso compartido con otras personas   \\n\\n      Nivel escolaridad madre Nivel escolaridad padre Ocupación madre  \\\\\\n0         Técnico o tecnólogo    Titulo universitario         Trabaja   \\n1        Titulo universitario     Técnico o tecnólogo         Trabaja   \\n2                  Secundaría              Secundaría         Trabaja   \\n3                       No sé                   No sé         Trabaja   \\n4        Titulo universitario              Secundaría         Trabaja   \\n...                       ...                     ...             ...   \\n22899     Técnico o tecnólogo                   No sé         Trabaja   \\n22900              Secundaría     Técnico o tecnólogo         Trabaja   \\n22901              Secundaría                Primaria         Trabaja   \\n22902              Secundaría              Secundaría         Trabaja   \\n22903                   No sé                   No sé  Cuida el hogar   \\n\\n      Ocupación padre  ... Un algoritmo es:  Un bucle es:  \\\\\\n0             Trabaja  ...                0             0   \\n1             Trabaja  ...                0             1   \\n2             Trabaja  ...                1             0   \\n3             Trabaja  ...                1             0   \\n4             Trabaja  ...                1             0   \\n...               ...  ...              ...           ...   \\n22899           No sé  ...                1             0   \\n22900         Trabaja  ...                0             0   \\n22901         Trabaja  ...                0             0   \\n22902         Trabaja  ...                0             1   \\n22903         Trabaja  ...                0             0   \\n\\n       ¿Cuál de las siguientes hamburguesas tiene los ingredientes A, E y F?  \\\\\\n0                                                      1                       \\n1                                                      0                       \\n2                                                      1                       \\n3                                                      0                       \\n4                                                      1                       \\n...                                                  ...                       \\n22899                                                  0                       \\n22900                                                  0                       \\n22901                                                  0                       \\n22902                                                  0                       \\n22903                                                  0                       \\n\\n       ¿Cuál de las siguientes opciones sí le permite al robot completar la misión de fotografiar cada tortuga?  \\\\\\n0                                                      1                                                          \\n1                                                      0                                                          \\n2                                                      1                                                          \\n3                                                      0                                                          \\n4                                                      0                                                          \\n...                                                  ...                                                          \\n22899                                                  0                                                          \\n22900                                                  0                                                          \\n22901                                                  0                                                          \\n22902                                                  0                                                          \\n22903                                                  0                                                          \\n\\n      ¿Cuál de los siguientes códigos permite que el robot complete su misión sembrando café?  \\\\\\n0                                                      1                                        \\n1                                                      1                                        \\n2                                                      0                                        \\n3                                                      0                                        \\n4                                                      0                                        \\n...                                                  ...                                        \\n22899                                                  0                                        \\n22900                                                  0                                        \\n22901                                                  0                                        \\n22902                                                  0                                        \\n22903                                                  0                                        \\n\\n       ¿Cuál será la foto con más vistas? ¿Para qué sirven los algoritmos?  \\\\\\n0                                       0                                0   \\n1                                       0                                0   \\n2                                       0                                1   \\n3                                       0                                0   \\n4                                       0                                1   \\n...                                   ...                              ...   \\n22899                                   0                                1   \\n22900                                   0                                0   \\n22901                                   0                                0   \\n22902                                   0                                1   \\n22903                                   0                                0   \\n\\n       ¿Qué botella debe cambiarse de color para que el resultado final sea una botella de color blanco?  \\\\\\n0                                                      1                                                   \\n1                                                      0                                                   \\n2                                                      0                                                   \\n3                                                      0                                                   \\n4                                                      0                                                   \\n...                                                  ...                                                   \\n22899                                                  0                                                   \\n22900                                                  0                                                   \\n22901                                                  0                                                   \\n22902                                                  0                                                   \\n22903                                                  0                                                   \\n\\n       ¿Qué mensaje deseaba enviar la líder Wayuú?  \\\\\\n0                                                0   \\n1                                                0   \\n2                                                0   \\n3                                                1   \\n4                                                1   \\n...                                            ...   \\n22899                                            0   \\n22900                                            0   \\n22901                                            0   \\n22902                                            0   \\n22903                                            0   \\n\\n       Óscar lleva 2 loncheras a la escuela todos los días ¿Cuál de las siguientes afirmaciones es falsa?  \\n0                                                      1                                                   \\n1                                                      0                                                   \\n2                                                      0                                                   \\n3                                                      0                                                   \\n4                                                      0                                                   \\n...                                                  ...                                                   \\n22899                                                  0                                                   \\n22900                                                  0                                                   \\n22901                                                  0                                                   \\n22902                                                  0                                                   \\n22903                                                  0                                                   \\n\\n[22904 rows x 28 columns]\",\r\n      \"text/html\": \"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>N registro</th>\\n      <th>Edad</th>\\n      <th>Sexo</th>\\n      <th>Sector vivienda</th>\\n      <th>Internet</th>\\n      <th>Uso del dispositivo móvil</th>\\n      <th>Nivel escolaridad madre</th>\\n      <th>Nivel escolaridad padre</th>\\n      <th>Ocupación madre</th>\\n      <th>Ocupación padre</th>\\n      <th>...</th>\\n      <th>Un algoritmo es:</th>\\n      <th>Un bucle es:</th>\\n      <th>¿Cuál de las siguientes hamburguesas tiene los ingredientes A, E y F?</th>\\n      <th>¿Cuál de las siguientes opciones sí le permite al robot completar la misión de fotografiar cada tortuga?</th>\\n      <th>¿Cuál de los siguientes códigos permite que el robot complete su misión sembrando café?</th>\\n      <th>¿Cuál será la foto con más vistas?</th>\\n      <th>¿Para qué sirven los algoritmos?</th>\\n      <th>¿Qué botella debe cambiarse de color para que el resultado final sea una botella de color blanco?</th>\\n      <th>¿Qué mensaje deseaba enviar la líder Wayuú?</th>\\n      <th>Óscar lleva 2 loncheras a la escuela todos los días ¿Cuál de las siguientes afirmaciones es falsa?</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1</td>\\n      <td>14</td>\\n      <td>Masculino</td>\\n      <td>Urbana</td>\\n      <td>Sí</td>\\n      <td>Uso propio (solo lo usas tú)</td>\\n      <td>Técnico o tecnólogo</td>\\n      <td>Titulo universitario</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>1</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>2</td>\\n      <td>16</td>\\n      <td>Masculino</td>\\n      <td>Urbana</td>\\n      <td>Sí</td>\\n      <td>Uso propio (solo lo usas tú)</td>\\n      <td>Titulo universitario</td>\\n      <td>Técnico o tecnólogo</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>3</td>\\n      <td>14</td>\\n      <td>Femenino</td>\\n      <td>Urbana</td>\\n      <td>Sí</td>\\n      <td>Uso compartido con otras personas</td>\\n      <td>Secundaría</td>\\n      <td>Secundaría</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>4</td>\\n      <td>15</td>\\n      <td>Masculino</td>\\n      <td>Urbana</td>\\n      <td>No</td>\\n      <td>No tengo acceso a ningún dispositivo electrónico</td>\\n      <td>No sé</td>\\n      <td>No sé</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>5</td>\\n      <td>14</td>\\n      <td>Femenino</td>\\n      <td>Urbana</td>\\n      <td>Sí</td>\\n      <td>Uso compartido con otras personas</td>\\n      <td>Titulo universitario</td>\\n      <td>Secundaría</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>...</th>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n    </tr>\\n    <tr>\\n      <th>22899</th>\\n      <td>D2012</td>\\n      <td>15</td>\\n      <td>Masculino</td>\\n      <td>Urbana</td>\\n      <td>No</td>\\n      <td>No tengo acceso a ningún dispositivo electrónico</td>\\n      <td>Técnico o tecnólogo</td>\\n      <td>No sé</td>\\n      <td>Trabaja</td>\\n      <td>No sé</td>\\n      <td>...</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>22900</th>\\n      <td>D2013</td>\\n      <td>15</td>\\n      <td>Masculino</td>\\n      <td>Urbana</td>\\n      <td>No</td>\\n      <td>No tengo acceso a ningún dispositivo electrónico</td>\\n      <td>Secundaría</td>\\n      <td>Técnico o tecnólogo</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>22901</th>\\n      <td>D2014</td>\\n      <td>15</td>\\n      <td>Femenino</td>\\n      <td>Urbana</td>\\n      <td>Sí</td>\\n      <td>Uso compartido con otras personas</td>\\n      <td>Secundaría</td>\\n      <td>Primaria</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>22902</th>\\n      <td>D2015</td>\\n      <td>15</td>\\n      <td>Masculino</td>\\n      <td>Urbana</td>\\n      <td>No</td>\\n      <td>Uso compartido con otras personas</td>\\n      <td>Secundaría</td>\\n      <td>Secundaría</td>\\n      <td>Trabaja</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n    </tr>\\n    <tr>\\n      <th>22903</th>\\n      <td>D2016</td>\\n      <td>13</td>\\n      <td>Masculino</td>\\n      <td>Urbana</td>\\n      <td>Sí</td>\\n      <td>Uso compartido con otras personas</td>\\n      <td>No sé</td>\\n      <td>No sé</td>\\n      <td>Cuida el hogar</td>\\n      <td>Trabaja</td>\\n      <td>...</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p>22904 rows × 28 columns</p>\\n</div>\"\r\n     },\r\n     \"execution_count\": 6,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"df_conocimientos = est[['N registro']+col_conocimiento].melt(id_vars='N registro', value_name='Respuesta estudiante', var_name='Pregunta')\\n\",\r\n    \"df_conocimientos['Respuesta correcta'] = df_conocimientos['Pregunta'].replace(respuestas_correctas)\\n\",\r\n    \"df_conocimientos['Puntaje conocimiento'] = 1*(df_conocimientos['Respuesta estudiante'] == df_conocimientos['Respuesta correcta'])\\n\",\r\n    \"df_estudiantes = df_conocimientos.pivot_table(index='N registro', columns='Pregunta', values='Puntaje conocimiento').reset_index()\\n\",\r\n    \"\\n\",\r\n    \"\\n\",\r\n    \"\\n\",\r\n    \"df_estudiantes= pd.merge(est[col_caract], df_estudiantes, on='N registro')\\n\",\r\n    \"df_estudiantes\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": []\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 7,\r\n   \"outputs\": [\r\n    {\r\n     \"ename\": \"ValueError\",\r\n     \"evalue\": \"invalid literal for int() with base 10: 'D1'\",\r\n     \"output_type\": \"error\",\r\n     \"traceback\": [\r\n      \"\\u001B[0;31m---------------------------------------------------------------------------\\u001B[0m\",\r\n      \"\\u001B[0;31mValueError\\u001B[0m                                Traceback (most recent call last)\",\r\n      \"Input \\u001B[0;32mIn [7]\\u001B[0m, in \\u001B[0;36m<cell line: 11>\\u001B[0;34m()\\u001B[0m\\n\\u001B[1;32m      7\\u001B[0m df_ambiente \\u001B[38;5;241m=\\u001B[39m est[[\\u001B[38;5;124m'\\u001B[39m\\u001B[38;5;124mN registro\\u001B[39m\\u001B[38;5;124m'\\u001B[39m]\\u001B[38;5;241m+\\u001B[39mcol_ambiental]\\u001B[38;5;241m.\\u001B[39mreplace(de_acuerdo)\\n\\u001B[1;32m      9\\u001B[0m df_estudiantes \\u001B[38;5;241m=\\u001B[39m pd\\u001B[38;5;241m.\\u001B[39mmerge(df_estudiantes, df_ambiente, on\\u001B[38;5;241m=\\u001B[39m\\u001B[38;5;124m'\\u001B[39m\\u001B[38;5;124mN registro\\u001B[39m\\u001B[38;5;124m'\\u001B[39m)\\n\\u001B[0;32m---> 11\\u001B[0m df_estudiantes \\u001B[38;5;241m=\\u001B[39m pd\\u001B[38;5;241m.\\u001B[39mmerge(df_estudiantes, \\u001B[43mest\\u001B[49m\\u001B[43m[\\u001B[49m\\u001B[43m[\\u001B[49m\\u001B[38;5;124;43m'\\u001B[39;49m\\u001B[38;5;124;43mN registro\\u001B[39;49m\\u001B[38;5;124;43m'\\u001B[39;49m\\u001B[43m]\\u001B[49m\\u001B[38;5;241;43m+\\u001B[39;49m\\u001B[43mcol_autoeficacia\\u001B[49m\\u001B[43m]\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mastype\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;28;43mint\\u001B[39;49m\\u001B[43m)\\u001B[49m, on\\u001B[38;5;241m=\\u001B[39m\\u001B[38;5;124m'\\u001B[39m\\u001B[38;5;124mN registro\\u001B[39m\\u001B[38;5;124m'\\u001B[39m)\\n\\u001B[1;32m     13\\u001B[0m df_estudiantes\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/generic.py:5912\\u001B[0m, in \\u001B[0;36mNDFrame.astype\\u001B[0;34m(self, dtype, copy, errors)\\u001B[0m\\n\\u001B[1;32m   5905\\u001B[0m     results \\u001B[38;5;241m=\\u001B[39m [\\n\\u001B[1;32m   5906\\u001B[0m         \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39miloc[:, i]\\u001B[38;5;241m.\\u001B[39mastype(dtype, copy\\u001B[38;5;241m=\\u001B[39mcopy)\\n\\u001B[1;32m   5907\\u001B[0m         \\u001B[38;5;28;01mfor\\u001B[39;00m i \\u001B[38;5;129;01min\\u001B[39;00m \\u001B[38;5;28mrange\\u001B[39m(\\u001B[38;5;28mlen\\u001B[39m(\\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39mcolumns))\\n\\u001B[1;32m   5908\\u001B[0m     ]\\n\\u001B[1;32m   5910\\u001B[0m \\u001B[38;5;28;01melse\\u001B[39;00m:\\n\\u001B[1;32m   5911\\u001B[0m     \\u001B[38;5;66;03m# else, only a single dtype is given\\u001B[39;00m\\n\\u001B[0;32m-> 5912\\u001B[0m     new_data \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43m_mgr\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mastype\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43mdtype\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mdtype\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mcopy\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mcopy\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43merrors\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43merrors\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m   5913\\u001B[0m     \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_constructor(new_data)\\u001B[38;5;241m.\\u001B[39m__finalize__(\\u001B[38;5;28mself\\u001B[39m, method\\u001B[38;5;241m=\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124mastype\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m)\\n\\u001B[1;32m   5915\\u001B[0m \\u001B[38;5;66;03m# GH 33113: handle empty frame or series\\u001B[39;00m\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/internals/managers.py:419\\u001B[0m, in \\u001B[0;36mBaseBlockManager.astype\\u001B[0;34m(self, dtype, copy, errors)\\u001B[0m\\n\\u001B[1;32m    418\\u001B[0m \\u001B[38;5;28;01mdef\\u001B[39;00m \\u001B[38;5;21mastype\\u001B[39m(\\u001B[38;5;28mself\\u001B[39m: T, dtype, copy: \\u001B[38;5;28mbool\\u001B[39m \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;01mFalse\\u001B[39;00m, errors: \\u001B[38;5;28mstr\\u001B[39m \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124mraise\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m) \\u001B[38;5;241m-\\u001B[39m\\u001B[38;5;241m>\\u001B[39m T:\\n\\u001B[0;32m--> 419\\u001B[0m     \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mapply\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;124;43m\\\"\\u001B[39;49m\\u001B[38;5;124;43mastype\\u001B[39;49m\\u001B[38;5;124;43m\\\"\\u001B[39;49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mdtype\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mdtype\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mcopy\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mcopy\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43merrors\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43merrors\\u001B[49m\\u001B[43m)\\u001B[49m\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/internals/managers.py:304\\u001B[0m, in \\u001B[0;36mBaseBlockManager.apply\\u001B[0;34m(self, f, align_keys, ignore_failures, **kwargs)\\u001B[0m\\n\\u001B[1;32m    302\\u001B[0m         applied \\u001B[38;5;241m=\\u001B[39m b\\u001B[38;5;241m.\\u001B[39mapply(f, \\u001B[38;5;241m*\\u001B[39m\\u001B[38;5;241m*\\u001B[39mkwargs)\\n\\u001B[1;32m    303\\u001B[0m     \\u001B[38;5;28;01melse\\u001B[39;00m:\\n\\u001B[0;32m--> 304\\u001B[0m         applied \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;43mgetattr\\u001B[39;49m\\u001B[43m(\\u001B[49m\\u001B[43mb\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mf\\u001B[49m\\u001B[43m)\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43mkwargs\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    305\\u001B[0m \\u001B[38;5;28;01mexcept\\u001B[39;00m (\\u001B[38;5;167;01mTypeError\\u001B[39;00m, \\u001B[38;5;167;01mNotImplementedError\\u001B[39;00m):\\n\\u001B[1;32m    306\\u001B[0m     \\u001B[38;5;28;01mif\\u001B[39;00m \\u001B[38;5;129;01mnot\\u001B[39;00m ignore_failures:\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/internals/blocks.py:580\\u001B[0m, in \\u001B[0;36mBlock.astype\\u001B[0;34m(self, dtype, copy, errors)\\u001B[0m\\n\\u001B[1;32m    562\\u001B[0m \\u001B[38;5;124;03m\\\"\\\"\\\"\\u001B[39;00m\\n\\u001B[1;32m    563\\u001B[0m \\u001B[38;5;124;03mCoerce to the new dtype.\\u001B[39;00m\\n\\u001B[1;32m    564\\u001B[0m \\n\\u001B[0;32m   (...)\\u001B[0m\\n\\u001B[1;32m    576\\u001B[0m \\u001B[38;5;124;03mBlock\\u001B[39;00m\\n\\u001B[1;32m    577\\u001B[0m \\u001B[38;5;124;03m\\\"\\\"\\\"\\u001B[39;00m\\n\\u001B[1;32m    578\\u001B[0m values \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39mvalues\\n\\u001B[0;32m--> 580\\u001B[0m new_values \\u001B[38;5;241m=\\u001B[39m \\u001B[43mastype_array_safe\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43mvalues\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mdtype\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mcopy\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mcopy\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43merrors\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43merrors\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    582\\u001B[0m new_values \\u001B[38;5;241m=\\u001B[39m maybe_coerce_values(new_values)\\n\\u001B[1;32m    583\\u001B[0m newb \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39mmake_block(new_values)\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1292\\u001B[0m, in \\u001B[0;36mastype_array_safe\\u001B[0;34m(values, dtype, copy, errors)\\u001B[0m\\n\\u001B[1;32m   1289\\u001B[0m     dtype \\u001B[38;5;241m=\\u001B[39m dtype\\u001B[38;5;241m.\\u001B[39mnumpy_dtype\\n\\u001B[1;32m   1291\\u001B[0m \\u001B[38;5;28;01mtry\\u001B[39;00m:\\n\\u001B[0;32m-> 1292\\u001B[0m     new_values \\u001B[38;5;241m=\\u001B[39m \\u001B[43mastype_array\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43mvalues\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mdtype\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mcopy\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mcopy\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m   1293\\u001B[0m \\u001B[38;5;28;01mexcept\\u001B[39;00m (\\u001B[38;5;167;01mValueError\\u001B[39;00m, \\u001B[38;5;167;01mTypeError\\u001B[39;00m):\\n\\u001B[1;32m   1294\\u001B[0m     \\u001B[38;5;66;03m# e.g. astype_nansafe can fail on object-dtype of strings\\u001B[39;00m\\n\\u001B[1;32m   1295\\u001B[0m     \\u001B[38;5;66;03m#  trying to convert to float\\u001B[39;00m\\n\\u001B[1;32m   1296\\u001B[0m     \\u001B[38;5;28;01mif\\u001B[39;00m errors \\u001B[38;5;241m==\\u001B[39m \\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124mignore\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m:\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1237\\u001B[0m, in \\u001B[0;36mastype_array\\u001B[0;34m(values, dtype, copy)\\u001B[0m\\n\\u001B[1;32m   1234\\u001B[0m     values \\u001B[38;5;241m=\\u001B[39m values\\u001B[38;5;241m.\\u001B[39mastype(dtype, copy\\u001B[38;5;241m=\\u001B[39mcopy)\\n\\u001B[1;32m   1236\\u001B[0m \\u001B[38;5;28;01melse\\u001B[39;00m:\\n\\u001B[0;32m-> 1237\\u001B[0m     values \\u001B[38;5;241m=\\u001B[39m \\u001B[43mastype_nansafe\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43mvalues\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mdtype\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mcopy\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mcopy\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m   1239\\u001B[0m \\u001B[38;5;66;03m# in pandas we don't store numpy str dtypes, so convert to object\\u001B[39;00m\\n\\u001B[1;32m   1240\\u001B[0m \\u001B[38;5;28;01mif\\u001B[39;00m \\u001B[38;5;28misinstance\\u001B[39m(dtype, np\\u001B[38;5;241m.\\u001B[39mdtype) \\u001B[38;5;129;01mand\\u001B[39;00m \\u001B[38;5;28missubclass\\u001B[39m(values\\u001B[38;5;241m.\\u001B[39mdtype\\u001B[38;5;241m.\\u001B[39mtype, \\u001B[38;5;28mstr\\u001B[39m):\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1098\\u001B[0m, in \\u001B[0;36mastype_nansafe\\u001B[0;34m(arr, dtype, copy, skipna)\\u001B[0m\\n\\u001B[1;32m   1096\\u001B[0m \\u001B[38;5;28;01mif\\u001B[39;00m arr\\u001B[38;5;241m.\\u001B[39mndim \\u001B[38;5;241m>\\u001B[39m \\u001B[38;5;241m1\\u001B[39m:\\n\\u001B[1;32m   1097\\u001B[0m     flat \\u001B[38;5;241m=\\u001B[39m arr\\u001B[38;5;241m.\\u001B[39mravel()\\n\\u001B[0;32m-> 1098\\u001B[0m     result \\u001B[38;5;241m=\\u001B[39m \\u001B[43mastype_nansafe\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43mflat\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mdtype\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mcopy\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mcopy\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mskipna\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mskipna\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m   1099\\u001B[0m     \\u001B[38;5;66;03m# error: Item \\\"ExtensionArray\\\" of \\\"Union[ExtensionArray, ndarray]\\\" has no\\u001B[39;00m\\n\\u001B[1;32m   1100\\u001B[0m     \\u001B[38;5;66;03m# attribute \\\"reshape\\\"\\u001B[39;00m\\n\\u001B[1;32m   1101\\u001B[0m     \\u001B[38;5;28;01mreturn\\u001B[39;00m result\\u001B[38;5;241m.\\u001B[39mreshape(arr\\u001B[38;5;241m.\\u001B[39mshape)  \\u001B[38;5;66;03m# type: ignore[union-attr]\\u001B[39;00m\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1154\\u001B[0m, in \\u001B[0;36mastype_nansafe\\u001B[0;34m(arr, dtype, copy, skipna)\\u001B[0m\\n\\u001B[1;32m   1150\\u001B[0m \\u001B[38;5;28;01melif\\u001B[39;00m is_object_dtype(arr\\u001B[38;5;241m.\\u001B[39mdtype):\\n\\u001B[1;32m   1151\\u001B[0m \\n\\u001B[1;32m   1152\\u001B[0m     \\u001B[38;5;66;03m# work around NumPy brokenness, #1987\\u001B[39;00m\\n\\u001B[1;32m   1153\\u001B[0m     \\u001B[38;5;28;01mif\\u001B[39;00m np\\u001B[38;5;241m.\\u001B[39missubdtype(dtype\\u001B[38;5;241m.\\u001B[39mtype, np\\u001B[38;5;241m.\\u001B[39minteger):\\n\\u001B[0;32m-> 1154\\u001B[0m         \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[43mlib\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mastype_intsafe\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43marr\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mdtype\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m   1156\\u001B[0m     \\u001B[38;5;66;03m# if we have a datetime/timedelta array of objects\\u001B[39;00m\\n\\u001B[1;32m   1157\\u001B[0m     \\u001B[38;5;66;03m# then coerce to a proper dtype and recall astype_nansafe\\u001B[39;00m\\n\\u001B[1;32m   1159\\u001B[0m     \\u001B[38;5;28;01melif\\u001B[39;00m is_datetime64_dtype(dtype):\\n\",\r\n      \"File \\u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/_libs/lib.pyx:668\\u001B[0m, in \\u001B[0;36mpandas._libs.lib.astype_intsafe\\u001B[0;34m()\\u001B[0m\\n\",\r\n      \"\\u001B[0;31mValueError\\u001B[0m: invalid literal for int() with base 10: 'D1'\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"# carreras_df = est[['N registro'] + col_carreras].replace(interesa_carreras)\\n\",\r\n    \"# df_estudiantes = pd.merge(df_estudiantes, carreras_df, on='N registro')\\n\",\r\n    \"#\\n\",\r\n    \"# genero_df = est[['N registro']+col_genero].replace(genero_estereotipos)\\n\",\r\n    \"# df_estudiantes = pd.merge(df_estudiantes, genero_df, on='N registro')\\n\",\r\n    \"\\n\",\r\n    \"df_ambiente = est[['N registro']+col_ambiental].replace(de_acuerdo)\\n\",\r\n    \"\\n\",\r\n    \"df_estudiantes = pd.merge(df_estudiantes, df_ambiente, on='N registro')\\n\",\r\n    \"\\n\",\r\n    \"df_estudiantes = pd.merge(df_estudiantes, est[['N registro']+col_autoeficacia].astype(int), on='N registro')\\n\",\r\n    \"\\n\",\r\n    \"df_estudiantes\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": [\r\n    \"#### Calcular escalas\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%% md\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"escalas_dict = {'medioambiente':\\n\",\r\n    \"                    {'cols':list(est.filter(regex='^4.*').columns),\\n\",\r\n    \"                     'cargas':[0.620,0.648,0.732,0.638,0.705,0.707,0.670]},\\n\",\r\n    \"                'autoeficaciaPC':\\n\",\r\n    \"                    {'cols':list(est.filter(regex='^3.1 |3.[2-5]|^3.7').columns),\\n\",\r\n    \"                'cargas':[0.724,0.822,0.782,0.745,0.574,0.390]},\\n\",\r\n    \"                'autoeficaciaProg':{\\n\",\r\n    \"                    'cols':list(est.filter(regex='^3.6 |3.[8-9]|3.10').columns),\\n\",\r\n    \"                    'cargas':[0.637,0.490,0.755,0.753]\\n\",\r\n    \"                }}\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"for k in list(escalas_dict.keys()):\\n\",\r\n    \"    df_estudiantes[k] = 100*df_estudiantes[escalas_dict[k]['cols']].add(-1).multiply(escalas_dict[k]['cargas']).sum(axis=1)/(4*sum(escalas_dict[k]['cargas']))\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"resultados = df_estudiantes[col_conocimiento].sum(axis=1)\\n\",\r\n    \"media = resultados.mean()\\n\",\r\n    \"desv = resultados.std()\\n\",\r\n    \"\\n\",\r\n    \"df_estudiantes['conocimiento'] = 50+(10*(resultados - media)/desv)\\n\",\r\n    \"\\n\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_estudiantes\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"estudiantes = pd.merge(est, df_estudiantes[['N registro', 'conocimiento', 'autoeficaciaPC', 'autoeficaciaProg', 'medioambiente']])\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_interes = est[['N registro']+col_interes].melt(id_vars='N registro', value_name='Seleccion', var_name='Pregunta')\\n\",\r\n    \"df_interes['Interes en tecnologia'] = 1*(df_interes['Seleccion'].str.contains('Tecnología'))\\n\",\r\n    \"df_puntaje_interes = df_interes.pivot_table(index='N registro', values=['Interes en tecnologia'], aggfunc=['sum', 'max']).reset_index()\\n\",\r\n    \"df_puntaje_interes.columns = ['N registro', 'Puntaje interes', 'Interesado en tecnologia']\\n\",\r\n    \"df_puntaje_interes['Puntaje interes'] = 100*(df_puntaje_interes['Puntaje interes']/2)\\n\",\r\n    \"#df_puntaje_interes = (100*df_interes.groupby('index')['Interes en tecnologia'].sum()/4).reset_index()\\n\",\r\n    \"df_puntaje_interes\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_7 = pd.merge(estudiantes, df_puntaje_interes, on='N registro')\\n\",\r\n    \"df_7\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_7['autoeficaciaProg'].mean()\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_7['Media autoeficaciaProg'] = df_7['autoeficaciaProg'].mean()\\n\",\r\n    \"df_7['Std autoeficaciaProg'] = df_7['autoeficaciaProg'].std()\\n\",\r\n    \"df_7['Media autoeficaciaPC'] = df_7['autoeficaciaPC'].mean()\\n\",\r\n    \"df_7['Std autoeficaciaPC'] = df_7['autoeficaciaPC'].std()\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_7['Media nacional interés'] = df_7['Puntaje interes'].mean()\\n\",\r\n    \"df_7['Std interes'] = df_7['Puntaje interes'].std()\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%% md\\n\"\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"### Calificar Dimensión\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"cols_dimension7 = ['conocimiento', 'Media autoeficaciaProg','Puntaje interes', 'Interesado en tecnologia', 'Media autoeficaciaPC', 'autoeficaciaPC', 'autoeficaciaProg', 'Media nacional interés','Std interes','Std autoeficaciaPC','Std autoeficaciaProg', 'N registro']\\n\",\r\n    \"agrupadores_dimension7 = ['mean', 'max', 'mean', 'sum', 'max', 'mean','mean', 'max','max','max','max', 'count']\\n\",\r\n    \"agg_funcs = dict(zip(cols_dimension7, agrupadores_dimension7))\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"agg_funcs\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_institucion = df_7.pivot_table(index=['Código IE'], values=cols_dimension7, aggfunc=agg_funcs).rename(columns={'N registro':'Cantidad estudiantes'})\\n\",\r\n    \"df_institucion['% Interesado'] = (df_institucion['Interesado en tecnologia']/df_institucion['Cantidad estudiantes'])*100\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"## Cuántas desviaciones estándar respecto a la media\\n\",\r\n    \"df_institucion['Diff autoeficaciaPC'] = (df_institucion['autoeficaciaPC'] - df_institucion['Media autoeficaciaPC'])/df_institucion['Std autoeficaciaPC']\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Diff autoeficaciaProg'] = (df_institucion['autoeficaciaProg'] - df_institucion['Media autoeficaciaProg'])/df_institucion['Std autoeficaciaProg']\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Diferencia interes'] = (df_institucion['Puntaje interes'] - df_institucion['Media nacional interés'])/df_institucion['Std interes']\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_institucion['Media autoeficaciaProg']\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_institucion['Nivel autoeficaciaPC'] =  pd.cut(df_institucion['autoeficaciaPC'], bins=[0, 20, 30, 50, 60, 80,100], labels=['1A', '1B', '2A', '2B','3', '5'], include_lowest=True)\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Nivel autoeficaciaProg'] =  pd.cut(df_institucion['autoeficaciaProg'], bins=[0, 20, 30, 50, 60, 100], labels=['1A', '1B', '2A', '2B', '5'], include_lowest=True)\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Nivel conocimiento'] =  pd.cut(df_institucion['conocimiento'], bins=[0, 30, 40, 50, 60, 100], labels=['1A', '1B', '2A', '2B', '5'], include_lowest=True)\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Nivel Interes'] = pd.cut(df_institucion['% Interesado'], bins=[0, 20, 40, 60, 80, 100], labels=['1A', '1B', \\\"2A\\\", \\\"2B\\\", '5'], include_lowest=True)\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Nivel Interes pares'] = pd.cut(df_institucion['Diferencia interes'], bins=[-3,-1,0,1,2,3], labels=['1B', \\\"2A\\\", \\\"3\\\", '4','5'], include_lowest=True)\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Nivel AutoeficaciaPC pares'] = pd.cut(df_institucion['Diff autoeficaciaPC'], bins=[-3, 0, 1.5, 2, 4], labels=['2A',\\\"2B\\\", \\\"3\\\", '4'], include_lowest=True)\\n\",\r\n    \"\\n\",\r\n    \"df_institucion['Nivel AutoeficaciaProg pares'] = pd.cut(df_institucion['Diff autoeficaciaProg'], bins=[-3, 0, 1.5, 2, 4], labels=['2A',\\\"2B\\\", \\\"3\\\", '4'], include_lowest=True)\\n\",\r\n    \"\\n\",\r\n    \"\\n\",\r\n    \"df_institucion\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_institucion['Dimensión 7'] = df_institucion.filter(regex='^Nivel').min(axis=1)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_dimension = df_institucion.filter(regex='^Nivel|Dim')\\n\",\r\n    \"df_dimension.reset_index().to_excel('Dimensión 7.xlsx')\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"jupyter\": {\r\n     \"outputs_hidden\": false\r\n    },\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"df_dimension\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3 (ipykernel)\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 3\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython3\",\r\n   \"version\": \"3.10.4\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 4\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/utils/cleaners/Marco_consolidacion/consolidacion_D7.ipynb b/utils/cleaners/Marco_consolidacion/consolidacion_D7.ipynb
--- a/utils/cleaners/Marco_consolidacion/consolidacion_D7.ipynb	(revision dbccb369e2f8da6f6e57aad887777fd3d18cdee9)
+++ b/utils/cleaners/Marco_consolidacion/consolidacion_D7.ipynb	(date 1655876394837)
@@ -88,16 +88,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
-   "metadata": {
-    "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   },
+   "execution_count": null,
    "outputs": [],
    "source": [
     "respuestas_correctas = {\n",
@@ -132,30 +123,18 @@
     "                       '5.4 ¿Quién crees que es el personaje que está sentado y esperando junto a la ventana?':estereotipo_m,\n",
     "                       '5.5 ¿Quién es la persona que trabaja en educación?':estereotipo_m,\n",
     "                       '5.6 ¿Quién crees que es la persona que prefiere estudiar ingeniería?':estereotipo_h}\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 5,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "['5.1 ¿Quién crees que ganará el concurso de matemáticas?',\n '5.2 ¿Quién crees que es capitán del barco?',\n '5.3 ¿Quién es la persona excluida de la construcción de la casa de madera?',\n '5.4 ¿Quién crees que es el personaje que está sentado y esperando junto a la ventana?',\n '5.5 ¿Quién es la persona que trabaja en educación?',\n '5.6 ¿Quién crees que es la persona que prefiere estudiar ingeniería?']"
-     },
-     "execution_count": 5,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "outputs": [],
    "source": [
     "col_index = ['Edad', 'Sexo', 'Código IE', '¿Te reconoces como una persona con algún tipo de discapacidad?']\n",
     "col_caract = ['N registro','Edad', 'Sexo', 'Sector vivienda', 'Internet', 'Uso del dispositivo móvil',\n",
@@ -171,22 +150,18 @@
     "col_ambiental = est.filter(regex=r'^4.', axis=1).columns.tolist()\n",
     "col_genero = est.filter(regex=r'^5.', axis=1).columns.tolist()\n",
     "col_genero"
-   ]
+   ],
+   "metadata": {
+    "collapsed": false,
+    "pycharm": {
+     "name": "#%%\n"
+    }
+   }
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "      N registro  Edad       Sexo Sector vivienda Internet  \\\n0              1    14  Masculino          Urbana       Sí   \n1              2    16  Masculino          Urbana       Sí   \n2              3    14   Femenino          Urbana       Sí   \n3              4    15  Masculino          Urbana       No   \n4              5    14   Femenino          Urbana       Sí   \n...          ...   ...        ...             ...      ...   \n22899      D2012    15  Masculino          Urbana       No   \n22900      D2013    15  Masculino          Urbana       No   \n22901      D2014    15   Femenino          Urbana       Sí   \n22902      D2015    15  Masculino          Urbana       No   \n22903      D2016    13  Masculino          Urbana       Sí   \n\n                              Uso del dispositivo móvil  \\\n0                          Uso propio (solo lo usas tú)   \n1                          Uso propio (solo lo usas tú)   \n2                     Uso compartido con otras personas   \n3      No tengo acceso a ningún dispositivo electrónico   \n4                     Uso compartido con otras personas   \n...                                                 ...   \n22899  No tengo acceso a ningún dispositivo electrónico   \n22900  No tengo acceso a ningún dispositivo electrónico   \n22901                 Uso compartido con otras personas   \n22902                 Uso compartido con otras personas   \n22903                 Uso compartido con otras personas   \n\n      Nivel escolaridad madre Nivel escolaridad padre Ocupación madre  \\\n0         Técnico o tecnólogo    Titulo universitario         Trabaja   \n1        Titulo universitario     Técnico o tecnólogo         Trabaja   \n2                  Secundaría              Secundaría         Trabaja   \n3                       No sé                   No sé         Trabaja   \n4        Titulo universitario              Secundaría         Trabaja   \n...                       ...                     ...             ...   \n22899     Técnico o tecnólogo                   No sé         Trabaja   \n22900              Secundaría     Técnico o tecnólogo         Trabaja   \n22901              Secundaría                Primaria         Trabaja   \n22902              Secundaría              Secundaría         Trabaja   \n22903                   No sé                   No sé  Cuida el hogar   \n\n      Ocupación padre  ... Un algoritmo es:  Un bucle es:  \\\n0             Trabaja  ...                0             0   \n1             Trabaja  ...                0             1   \n2             Trabaja  ...                1             0   \n3             Trabaja  ...                1             0   \n4             Trabaja  ...                1             0   \n...               ...  ...              ...           ...   \n22899           No sé  ...                1             0   \n22900         Trabaja  ...                0             0   \n22901         Trabaja  ...                0             0   \n22902         Trabaja  ...                0             1   \n22903         Trabaja  ...                0             0   \n\n       ¿Cuál de las siguientes hamburguesas tiene los ingredientes A, E y F?  \\\n0                                                      1                       \n1                                                      0                       \n2                                                      1                       \n3                                                      0                       \n4                                                      1                       \n...                                                  ...                       \n22899                                                  0                       \n22900                                                  0                       \n22901                                                  0                       \n22902                                                  0                       \n22903                                                  0                       \n\n       ¿Cuál de las siguientes opciones sí le permite al robot completar la misión de fotografiar cada tortuga?  \\\n0                                                      1                                                          \n1                                                      0                                                          \n2                                                      1                                                          \n3                                                      0                                                          \n4                                                      0                                                          \n...                                                  ...                                                          \n22899                                                  0                                                          \n22900                                                  0                                                          \n22901                                                  0                                                          \n22902                                                  0                                                          \n22903                                                  0                                                          \n\n      ¿Cuál de los siguientes códigos permite que el robot complete su misión sembrando café?  \\\n0                                                      1                                        \n1                                                      1                                        \n2                                                      0                                        \n3                                                      0                                        \n4                                                      0                                        \n...                                                  ...                                        \n22899                                                  0                                        \n22900                                                  0                                        \n22901                                                  0                                        \n22902                                                  0                                        \n22903                                                  0                                        \n\n       ¿Cuál será la foto con más vistas? ¿Para qué sirven los algoritmos?  \\\n0                                       0                                0   \n1                                       0                                0   \n2                                       0                                1   \n3                                       0                                0   \n4                                       0                                1   \n...                                   ...                              ...   \n22899                                   0                                1   \n22900                                   0                                0   \n22901                                   0                                0   \n22902                                   0                                1   \n22903                                   0                                0   \n\n       ¿Qué botella debe cambiarse de color para que el resultado final sea una botella de color blanco?  \\\n0                                                      1                                                   \n1                                                      0                                                   \n2                                                      0                                                   \n3                                                      0                                                   \n4                                                      0                                                   \n...                                                  ...                                                   \n22899                                                  0                                                   \n22900                                                  0                                                   \n22901                                                  0                                                   \n22902                                                  0                                                   \n22903                                                  0                                                   \n\n       ¿Qué mensaje deseaba enviar la líder Wayuú?  \\\n0                                                0   \n1                                                0   \n2                                                0   \n3                                                1   \n4                                                1   \n...                                            ...   \n22899                                            0   \n22900                                            0   \n22901                                            0   \n22902                                            0   \n22903                                            0   \n\n       Óscar lleva 2 loncheras a la escuela todos los días ¿Cuál de las siguientes afirmaciones es falsa?  \n0                                                      1                                                   \n1                                                      0                                                   \n2                                                      0                                                   \n3                                                      0                                                   \n4                                                      0                                                   \n...                                                  ...                                                   \n22899                                                  0                                                   \n22900                                                  0                                                   \n22901                                                  0                                                   \n22902                                                  0                                                   \n22903                                                  0                                                   \n\n[22904 rows x 28 columns]",
-      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>N registro</th>\n      <th>Edad</th>\n      <th>Sexo</th>\n      <th>Sector vivienda</th>\n      <th>Internet</th>\n      <th>Uso del dispositivo móvil</th>\n      <th>Nivel escolaridad madre</th>\n      <th>Nivel escolaridad padre</th>\n      <th>Ocupación madre</th>\n      <th>Ocupación padre</th>\n      <th>...</th>\n      <th>Un algoritmo es:</th>\n      <th>Un bucle es:</th>\n      <th>¿Cuál de las siguientes hamburguesas tiene los ingredientes A, E y F?</th>\n      <th>¿Cuál de las siguientes opciones sí le permite al robot completar la misión de fotografiar cada tortuga?</th>\n      <th>¿Cuál de los siguientes códigos permite que el robot complete su misión sembrando café?</th>\n      <th>¿Cuál será la foto con más vistas?</th>\n      <th>¿Para qué sirven los algoritmos?</th>\n      <th>¿Qué botella debe cambiarse de color para que el resultado final sea una botella de color blanco?</th>\n      <th>¿Qué mensaje deseaba enviar la líder Wayuú?</th>\n      <th>Óscar lleva 2 loncheras a la escuela todos los días ¿Cuál de las siguientes afirmaciones es falsa?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>14</td>\n      <td>Masculino</td>\n      <td>Urbana</td>\n      <td>Sí</td>\n      <td>Uso propio (solo lo usas tú)</td>\n      <td>Técnico o tecnólogo</td>\n      <td>Titulo universitario</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>16</td>\n      <td>Masculino</td>\n      <td>Urbana</td>\n      <td>Sí</td>\n      <td>Uso propio (solo lo usas tú)</td>\n      <td>Titulo universitario</td>\n      <td>Técnico o tecnólogo</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>14</td>\n      <td>Femenino</td>\n      <td>Urbana</td>\n      <td>Sí</td>\n      <td>Uso compartido con otras personas</td>\n      <td>Secundaría</td>\n      <td>Secundaría</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>15</td>\n      <td>Masculino</td>\n      <td>Urbana</td>\n      <td>No</td>\n      <td>No tengo acceso a ningún dispositivo electrónico</td>\n      <td>No sé</td>\n      <td>No sé</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>14</td>\n      <td>Femenino</td>\n      <td>Urbana</td>\n      <td>Sí</td>\n      <td>Uso compartido con otras personas</td>\n      <td>Titulo universitario</td>\n      <td>Secundaría</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>22899</th>\n      <td>D2012</td>\n      <td>15</td>\n      <td>Masculino</td>\n      <td>Urbana</td>\n      <td>No</td>\n      <td>No tengo acceso a ningún dispositivo electrónico</td>\n      <td>Técnico o tecnólogo</td>\n      <td>No sé</td>\n      <td>Trabaja</td>\n      <td>No sé</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22900</th>\n      <td>D2013</td>\n      <td>15</td>\n      <td>Masculino</td>\n      <td>Urbana</td>\n      <td>No</td>\n      <td>No tengo acceso a ningún dispositivo electrónico</td>\n      <td>Secundaría</td>\n      <td>Técnico o tecnólogo</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22901</th>\n      <td>D2014</td>\n      <td>15</td>\n      <td>Femenino</td>\n      <td>Urbana</td>\n      <td>Sí</td>\n      <td>Uso compartido con otras personas</td>\n      <td>Secundaría</td>\n      <td>Primaria</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22902</th>\n      <td>D2015</td>\n      <td>15</td>\n      <td>Masculino</td>\n      <td>Urbana</td>\n      <td>No</td>\n      <td>Uso compartido con otras personas</td>\n      <td>Secundaría</td>\n      <td>Secundaría</td>\n      <td>Trabaja</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22903</th>\n      <td>D2016</td>\n      <td>13</td>\n      <td>Masculino</td>\n      <td>Urbana</td>\n      <td>Sí</td>\n      <td>Uso compartido con otras personas</td>\n      <td>No sé</td>\n      <td>No sé</td>\n      <td>Cuida el hogar</td>\n      <td>Trabaja</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>22904 rows × 28 columns</p>\n</div>"
-     },
-     "execution_count": 6,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "execution_count": null,
+   "outputs": [],
    "source": [
     "df_conocimientos = est[['N registro']+col_conocimiento].melt(id_vars='N registro', value_name='Respuesta estudiante', var_name='Pregunta')\n",
     "df_conocimientos['Respuesta correcta'] = df_conocimientos['Pregunta'].replace(respuestas_correctas)\n",
@@ -207,34 +182,18 @@
   },
   {
    "cell_type": "markdown",
-   "metadata": {},
-   "source": []
+   "source": [],
+   "metadata": {
+    "collapsed": false,
+    "pycharm": {
+     "name": "#%% md\n"
+    }
+   }
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
-   "outputs": [
-    {
-     "ename": "ValueError",
-     "evalue": "invalid literal for int() with base 10: 'D1'",
-     "output_type": "error",
-     "traceback": [
-      "\u001B[0;31m---------------------------------------------------------------------------\u001B[0m",
-      "\u001B[0;31mValueError\u001B[0m                                Traceback (most recent call last)",
-      "Input \u001B[0;32mIn [7]\u001B[0m, in \u001B[0;36m<cell line: 11>\u001B[0;34m()\u001B[0m\n\u001B[1;32m      7\u001B[0m df_ambiente \u001B[38;5;241m=\u001B[39m est[[\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mN registro\u001B[39m\u001B[38;5;124m'\u001B[39m]\u001B[38;5;241m+\u001B[39mcol_ambiental]\u001B[38;5;241m.\u001B[39mreplace(de_acuerdo)\n\u001B[1;32m      9\u001B[0m df_estudiantes \u001B[38;5;241m=\u001B[39m pd\u001B[38;5;241m.\u001B[39mmerge(df_estudiantes, df_ambiente, on\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mN registro\u001B[39m\u001B[38;5;124m'\u001B[39m)\n\u001B[0;32m---> 11\u001B[0m df_estudiantes \u001B[38;5;241m=\u001B[39m pd\u001B[38;5;241m.\u001B[39mmerge(df_estudiantes, \u001B[43mest\u001B[49m\u001B[43m[\u001B[49m\u001B[43m[\u001B[49m\u001B[38;5;124;43m'\u001B[39;49m\u001B[38;5;124;43mN registro\u001B[39;49m\u001B[38;5;124;43m'\u001B[39;49m\u001B[43m]\u001B[49m\u001B[38;5;241;43m+\u001B[39;49m\u001B[43mcol_autoeficacia\u001B[49m\u001B[43m]\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mastype\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;28;43mint\u001B[39;49m\u001B[43m)\u001B[49m, on\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m'\u001B[39m\u001B[38;5;124mN registro\u001B[39m\u001B[38;5;124m'\u001B[39m)\n\u001B[1;32m     13\u001B[0m df_estudiantes\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/generic.py:5912\u001B[0m, in \u001B[0;36mNDFrame.astype\u001B[0;34m(self, dtype, copy, errors)\u001B[0m\n\u001B[1;32m   5905\u001B[0m     results \u001B[38;5;241m=\u001B[39m [\n\u001B[1;32m   5906\u001B[0m         \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39miloc[:, i]\u001B[38;5;241m.\u001B[39mastype(dtype, copy\u001B[38;5;241m=\u001B[39mcopy)\n\u001B[1;32m   5907\u001B[0m         \u001B[38;5;28;01mfor\u001B[39;00m i \u001B[38;5;129;01min\u001B[39;00m \u001B[38;5;28mrange\u001B[39m(\u001B[38;5;28mlen\u001B[39m(\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mcolumns))\n\u001B[1;32m   5908\u001B[0m     ]\n\u001B[1;32m   5910\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m   5911\u001B[0m     \u001B[38;5;66;03m# else, only a single dtype is given\u001B[39;00m\n\u001B[0;32m-> 5912\u001B[0m     new_data \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_mgr\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mastype\u001B[49m\u001B[43m(\u001B[49m\u001B[43mdtype\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcopy\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43merrors\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43merrors\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   5913\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_constructor(new_data)\u001B[38;5;241m.\u001B[39m__finalize__(\u001B[38;5;28mself\u001B[39m, method\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mastype\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n\u001B[1;32m   5915\u001B[0m \u001B[38;5;66;03m# GH 33113: handle empty frame or series\u001B[39;00m\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/internals/managers.py:419\u001B[0m, in \u001B[0;36mBaseBlockManager.astype\u001B[0;34m(self, dtype, copy, errors)\u001B[0m\n\u001B[1;32m    418\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mastype\u001B[39m(\u001B[38;5;28mself\u001B[39m: T, dtype, copy: \u001B[38;5;28mbool\u001B[39m \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mFalse\u001B[39;00m, errors: \u001B[38;5;28mstr\u001B[39m \u001B[38;5;241m=\u001B[39m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mraise\u001B[39m\u001B[38;5;124m\"\u001B[39m) \u001B[38;5;241m-\u001B[39m\u001B[38;5;241m>\u001B[39m T:\n\u001B[0;32m--> 419\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mapply\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mastype\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcopy\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43merrors\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43merrors\u001B[49m\u001B[43m)\u001B[49m\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/internals/managers.py:304\u001B[0m, in \u001B[0;36mBaseBlockManager.apply\u001B[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001B[0m\n\u001B[1;32m    302\u001B[0m         applied \u001B[38;5;241m=\u001B[39m b\u001B[38;5;241m.\u001B[39mapply(f, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)\n\u001B[1;32m    303\u001B[0m     \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m--> 304\u001B[0m         applied \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mgetattr\u001B[39;49m\u001B[43m(\u001B[49m\u001B[43mb\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mf\u001B[49m\u001B[43m)\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    305\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m (\u001B[38;5;167;01mTypeError\u001B[39;00m, \u001B[38;5;167;01mNotImplementedError\u001B[39;00m):\n\u001B[1;32m    306\u001B[0m     \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m ignore_failures:\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/internals/blocks.py:580\u001B[0m, in \u001B[0;36mBlock.astype\u001B[0;34m(self, dtype, copy, errors)\u001B[0m\n\u001B[1;32m    562\u001B[0m \u001B[38;5;124;03m\"\"\"\u001B[39;00m\n\u001B[1;32m    563\u001B[0m \u001B[38;5;124;03mCoerce to the new dtype.\u001B[39;00m\n\u001B[1;32m    564\u001B[0m \n\u001B[0;32m   (...)\u001B[0m\n\u001B[1;32m    576\u001B[0m \u001B[38;5;124;03mBlock\u001B[39;00m\n\u001B[1;32m    577\u001B[0m \u001B[38;5;124;03m\"\"\"\u001B[39;00m\n\u001B[1;32m    578\u001B[0m values \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mvalues\n\u001B[0;32m--> 580\u001B[0m new_values \u001B[38;5;241m=\u001B[39m \u001B[43mastype_array_safe\u001B[49m\u001B[43m(\u001B[49m\u001B[43mvalues\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcopy\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43merrors\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43merrors\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    582\u001B[0m new_values \u001B[38;5;241m=\u001B[39m maybe_coerce_values(new_values)\n\u001B[1;32m    583\u001B[0m newb \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mmake_block(new_values)\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1292\u001B[0m, in \u001B[0;36mastype_array_safe\u001B[0;34m(values, dtype, copy, errors)\u001B[0m\n\u001B[1;32m   1289\u001B[0m     dtype \u001B[38;5;241m=\u001B[39m dtype\u001B[38;5;241m.\u001B[39mnumpy_dtype\n\u001B[1;32m   1291\u001B[0m \u001B[38;5;28;01mtry\u001B[39;00m:\n\u001B[0;32m-> 1292\u001B[0m     new_values \u001B[38;5;241m=\u001B[39m \u001B[43mastype_array\u001B[49m\u001B[43m(\u001B[49m\u001B[43mvalues\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcopy\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1293\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m (\u001B[38;5;167;01mValueError\u001B[39;00m, \u001B[38;5;167;01mTypeError\u001B[39;00m):\n\u001B[1;32m   1294\u001B[0m     \u001B[38;5;66;03m# e.g. astype_nansafe can fail on object-dtype of strings\u001B[39;00m\n\u001B[1;32m   1295\u001B[0m     \u001B[38;5;66;03m#  trying to convert to float\u001B[39;00m\n\u001B[1;32m   1296\u001B[0m     \u001B[38;5;28;01mif\u001B[39;00m errors \u001B[38;5;241m==\u001B[39m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mignore\u001B[39m\u001B[38;5;124m\"\u001B[39m:\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1237\u001B[0m, in \u001B[0;36mastype_array\u001B[0;34m(values, dtype, copy)\u001B[0m\n\u001B[1;32m   1234\u001B[0m     values \u001B[38;5;241m=\u001B[39m values\u001B[38;5;241m.\u001B[39mastype(dtype, copy\u001B[38;5;241m=\u001B[39mcopy)\n\u001B[1;32m   1236\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m-> 1237\u001B[0m     values \u001B[38;5;241m=\u001B[39m \u001B[43mastype_nansafe\u001B[49m\u001B[43m(\u001B[49m\u001B[43mvalues\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcopy\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1239\u001B[0m \u001B[38;5;66;03m# in pandas we don't store numpy str dtypes, so convert to object\u001B[39;00m\n\u001B[1;32m   1240\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28misinstance\u001B[39m(dtype, np\u001B[38;5;241m.\u001B[39mdtype) \u001B[38;5;129;01mand\u001B[39;00m \u001B[38;5;28missubclass\u001B[39m(values\u001B[38;5;241m.\u001B[39mdtype\u001B[38;5;241m.\u001B[39mtype, \u001B[38;5;28mstr\u001B[39m):\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1098\u001B[0m, in \u001B[0;36mastype_nansafe\u001B[0;34m(arr, dtype, copy, skipna)\u001B[0m\n\u001B[1;32m   1096\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m arr\u001B[38;5;241m.\u001B[39mndim \u001B[38;5;241m>\u001B[39m \u001B[38;5;241m1\u001B[39m:\n\u001B[1;32m   1097\u001B[0m     flat \u001B[38;5;241m=\u001B[39m arr\u001B[38;5;241m.\u001B[39mravel()\n\u001B[0;32m-> 1098\u001B[0m     result \u001B[38;5;241m=\u001B[39m \u001B[43mastype_nansafe\u001B[49m\u001B[43m(\u001B[49m\u001B[43mflat\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mcopy\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mskipna\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mskipna\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1099\u001B[0m     \u001B[38;5;66;03m# error: Item \"ExtensionArray\" of \"Union[ExtensionArray, ndarray]\" has no\u001B[39;00m\n\u001B[1;32m   1100\u001B[0m     \u001B[38;5;66;03m# attribute \"reshape\"\u001B[39;00m\n\u001B[1;32m   1101\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m result\u001B[38;5;241m.\u001B[39mreshape(arr\u001B[38;5;241m.\u001B[39mshape)  \u001B[38;5;66;03m# type: ignore[union-attr]\u001B[39;00m\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/core/dtypes/cast.py:1154\u001B[0m, in \u001B[0;36mastype_nansafe\u001B[0;34m(arr, dtype, copy, skipna)\u001B[0m\n\u001B[1;32m   1150\u001B[0m \u001B[38;5;28;01melif\u001B[39;00m is_object_dtype(arr\u001B[38;5;241m.\u001B[39mdtype):\n\u001B[1;32m   1151\u001B[0m \n\u001B[1;32m   1152\u001B[0m     \u001B[38;5;66;03m# work around NumPy brokenness, #1987\u001B[39;00m\n\u001B[1;32m   1153\u001B[0m     \u001B[38;5;28;01mif\u001B[39;00m np\u001B[38;5;241m.\u001B[39missubdtype(dtype\u001B[38;5;241m.\u001B[39mtype, np\u001B[38;5;241m.\u001B[39minteger):\n\u001B[0;32m-> 1154\u001B[0m         \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mlib\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mastype_intsafe\u001B[49m\u001B[43m(\u001B[49m\u001B[43marr\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1156\u001B[0m     \u001B[38;5;66;03m# if we have a datetime/timedelta array of objects\u001B[39;00m\n\u001B[1;32m   1157\u001B[0m     \u001B[38;5;66;03m# then coerce to a proper dtype and recall astype_nansafe\u001B[39;00m\n\u001B[1;32m   1159\u001B[0m     \u001B[38;5;28;01melif\u001B[39;00m is_datetime64_dtype(dtype):\n",
-      "File \u001B[0;32m~/anaconda3/envs/cfk2022/lib/python3.10/site-packages/pandas/_libs/lib.pyx:668\u001B[0m, in \u001B[0;36mpandas._libs.lib.astype_intsafe\u001B[0;34m()\u001B[0m\n",
-      "\u001B[0;31mValueError\u001B[0m: invalid literal for int() with base 10: 'D1'"
-     ]
-    }
-   ],
+   "execution_count": null,
+   "outputs": [],
    "source": [
     "# carreras_df = est[['N registro'] + col_carreras].replace(interesa_carreras)\n",
     "# df_estudiantes = pd.merge(df_estudiantes, carreras_df, on='N registro')\n",
@@ -357,15 +316,6 @@
   {
    "cell_type": "code",
    "execution_count": null,
-   "metadata": {
-    "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   },
    "outputs": [],
    "source": [
     "df_interes = est[['N registro']+col_interes].melt(id_vars='N registro', value_name='Seleccion', var_name='Pregunta')\n",
@@ -375,25 +325,28 @@
     "df_puntaje_interes['Puntaje interes'] = 100*(df_puntaje_interes['Puntaje interes']/2)\n",
     "#df_puntaje_interes = (100*df_interes.groupby('index')['Interes en tecnologia'].sum()/4).reset_index()\n",
     "df_puntaje_interes"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "df_7 = pd.merge(estudiantes, df_puntaje_interes, on='N registro')\n",
     "df_7"
-   ]
+   ],
+   "metadata": {
+    "collapsed": false,
+    "pycharm": {
+     "name": "#%%\n"
+    }
+   }
   },
   {
    "cell_type": "code",
@@ -412,74 +365,62 @@
   {
    "cell_type": "code",
    "execution_count": null,
-   "metadata": {
-    "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   },
    "outputs": [],
    "source": [
     "df_7['Media autoeficaciaProg'] = df_7['autoeficaciaProg'].mean()\n",
     "df_7['Std autoeficaciaProg'] = df_7['autoeficaciaProg'].std()\n",
     "df_7['Media autoeficaciaPC'] = df_7['autoeficaciaPC'].mean()\n",
     "df_7['Std autoeficaciaPC'] = df_7['autoeficaciaPC'].std()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "df_7['Media nacional interés'] = df_7['Puntaje interes'].mean()\n",
     "df_7['Std interes'] = df_7['Puntaje interes'].std()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
-     "name": "#%% md\n"
+     "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "markdown",
    "source": [
     "### Calificar Dimensión"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
-     "name": "#%%\n"
+     "name": "#%% md\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "cols_dimension7 = ['conocimiento', 'Media autoeficaciaProg','Puntaje interes', 'Interesado en tecnologia', 'Media autoeficaciaPC', 'autoeficaciaPC', 'autoeficaciaProg', 'Media nacional interés','Std interes','Std autoeficaciaPC','Std autoeficaciaProg', 'N registro']\n",
     "agrupadores_dimension7 = ['mean', 'max', 'mean', 'sum', 'max', 'mean','mean', 'max','max','max','max', 'count']\n",
     "agg_funcs = dict(zip(cols_dimension7, agrupadores_dimension7))"
-   ]
+   ],
+   "metadata": {
+    "collapsed": false,
+    "pycharm": {
+     "name": "#%%\n"
+    }
+   }
   },
   {
    "cell_type": "code",
@@ -498,33 +439,21 @@
   {
    "cell_type": "code",
    "execution_count": null,
-   "metadata": {
-    "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   },
    "outputs": [],
    "source": [
     "df_institucion = df_7.pivot_table(index=['Código IE'], values=cols_dimension7, aggfunc=agg_funcs).rename(columns={'N registro':'Cantidad estudiantes'})\n",
     "df_institucion['% Interesado'] = (df_institucion['Interesado en tecnologia']/df_institucion['Cantidad estudiantes'])*100"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "## Cuántas desviaciones estándar respecto a la media\n",
@@ -533,37 +462,31 @@
     "df_institucion['Diff autoeficaciaProg'] = (df_institucion['autoeficaciaProg'] - df_institucion['Media autoeficaciaProg'])/df_institucion['Std autoeficaciaProg']\n",
     "\n",
     "df_institucion['Diferencia interes'] = (df_institucion['Puntaje interes'] - df_institucion['Media nacional interés'])/df_institucion['Std interes']"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "df_institucion['Media autoeficaciaProg']"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "df_institucion['Nivel autoeficaciaPC'] =  pd.cut(df_institucion['autoeficaciaPC'], bins=[0, 20, 30, 50, 60, 80,100], labels=['1A', '1B', '2A', '2B','3', '5'], include_lowest=True)\n",
@@ -582,65 +505,50 @@
     "\n",
     "\n",
     "df_institucion"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "df_institucion['Dimensión 7'] = df_institucion.filter(regex='^Nivel').min(axis=1)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "df_dimension = df_institucion.filter(regex='^Nivel|Dim')\n",
     "df_dimension.reset_index().to_excel('Dimensión 7.xlsx')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
+   ],
    "metadata": {
     "collapsed": false,
-    "jupyter": {
-     "outputs_hidden": false
-    },
     "pycharm": {
      "name": "#%%\n"
     }
-   },
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
    "outputs": [],
    "source": [
     "df_dimension"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "outputs": [],
-   "source": [],
+   ],
    "metadata": {
     "collapsed": false,
     "pycharm": {
Index: utils/cleaners/Marco_consolidacion/Acumulativo.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": [\r\n    \"## Cuaderno para leer todas las dimensiones y unirlas\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%% md\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 1,\r\n   \"metadata\": {\r\n    \"collapsed\": true\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"import pandas as pd\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 2,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D1 = pd.read_excel('Dimensión 1.xlsx')\\n\",\r\n    \"D1 = D1.loc[:,['Código IE', 'Dimensión 1']]\\n\",\r\n    \"D1['Código IE'] = D1['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D1 = D1.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 3,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D2 = pd.read_excel('Dimensión 2.xlsx')\\n\",\r\n    \"D2 = D2.loc[:,['Código IE', 'Dimensión 2']]\\n\",\r\n    \"D2['Código IE'] = D2['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D2 = D2.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 4,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D3 = pd.read_excel('Dimensión 3.xlsx')\\n\",\r\n    \"D3 = D3.loc[:,['Código IE', 'Dimensión 3']]\\n\",\r\n    \"D3['Código IE'] = D3['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D3 = D3.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 5,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D4 = pd.read_excel('Dimension 4.xlsx')\\n\",\r\n    \"D4 = D4.loc[:,['Código IE', 'Dimensión 4']]\\n\",\r\n    \"D4['Código IE'] = D4['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D4 = D4.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 6,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D5 = pd.read_excel('Dimensión 5.xlsx')\\n\",\r\n    \"D5 = D5.loc[:,['Código IE', 'Dimensión 5']]\\n\",\r\n    \"D5['Código IE'] = D5['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D5 = D5.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 7,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D6 = pd.read_excel('Dimensión 6.xlsx')\\n\",\r\n    \"D6 = D6.loc[:,['Código IE', 'Dimensión 6']]\\n\",\r\n    \"D6['Código IE'] = D6['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D6 = D6.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 8,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D7 = pd.read_excel('Dimensión 7.xlsx')\\n\",\r\n    \"D7 = D7.loc[:,['Código IE', 'Dimensión 7']]\\n\",\r\n    \"D7['Código IE'] = D7['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D7 = D7.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 9,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"D8 = pd.read_excel('Dimensión 8.xlsx')\\n\",\r\n    \"D8 = D8.loc[:,['Código IE', 'Dimensión 8']]\\n\",\r\n    \"D8['Código IE'] = D8['Código IE'].astype(float).astype(int)\\n\",\r\n    \"D8 = D8.set_index('Código IE')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 10,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"marco = pd.concat([D1,D2,D3,D4,D5,D6,D7,D8],ignore_index=False, axis=1)\\n\",\r\n    \"marco = marco.fillna(\\\"0\\\")\\n\",\r\n    \"marco = marco.reset_index()\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 11,\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"     Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\\\\n0            1           0           0           0          2B          1A   \\n1            2          1A          1B          2A          2A          1A   \\n2            3          1A          1B          2A           3          1A   \\n3            4          1B          1B          2A          1A          1A   \\n4            5          1A          1B          1A          2B          1A   \\n..         ...         ...         ...         ...         ...         ...   \\n247        248          1A          1B          1A          1A          1A   \\n248        249          1A          1B          1A          2B          1A   \\n249        250          1A          1B          1A          2A          1A   \\n250        251          1A          1B          1A          2B          1A   \\n251        252          1A          1B          1A          2B          1A   \\n\\n    Dimensión 6 Dimensión 7 Dimensión 8  \\n0             0          2A          1B  \\n1            1B          2A          1A  \\n2            1B          2A          1A  \\n3            1B          2A          1A  \\n4            1B          2B           4  \\n..          ...         ...         ...  \\n247          1B          2A          1A  \\n248          1B          1B          1A  \\n249          1B          1B          1A  \\n250          1B          1B          2A  \\n251          1B          2A          1A  \\n\\n[252 rows x 9 columns]\",\r\n      \"text/html\": \"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>Código IE</th>\\n      <th>Dimensión 1</th>\\n      <th>Dimensión 2</th>\\n      <th>Dimensión 3</th>\\n      <th>Dimensión 4</th>\\n      <th>Dimensión 5</th>\\n      <th>Dimensión 6</th>\\n      <th>Dimensión 7</th>\\n      <th>Dimensión 8</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>0</td>\\n      <td>2A</td>\\n      <td>1B</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>2</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>3</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>3</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>4</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>5</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2B</td>\\n      <td>4</td>\\n    </tr>\\n    <tr>\\n      <th>...</th>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n    </tr>\\n    <tr>\\n      <th>247</th>\\n      <td>248</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>1A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>248</th>\\n      <td>249</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>249</th>\\n      <td>250</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>250</th>\\n      <td>251</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n    </tr>\\n    <tr>\\n      <th>251</th>\\n      <td>252</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p>252 rows × 9 columns</p>\\n</div>\"\r\n     },\r\n     \"execution_count\": 11,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"marco\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 12,\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"    Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\\\\n0           1           0           0           0          2B          1A   \\n1           2          1A          1B          2A          2A          1A   \\n2           3          1A          1B          2A           3          1A   \\n3           4          1B          1B          2A          1A          1A   \\n4           5          1A          1B          1A          2B          1A   \\n..        ...         ...         ...         ...         ...         ...   \\n248       249          1A          1B          1A          2B          1A   \\n249       250          1A          1B          1A          2A          1A   \\n250       251          1A          1B          1A          2B          1A   \\n251       252          1A          1B          1A          2B          1A   \\n0        Moda          1A          1B          1A          2A          1A   \\n\\n    Dimensión 6 Dimensión 7 Dimensión 8  \\n0             0          2A          1B  \\n1            1B          2A          1A  \\n2            1B          2A          1A  \\n3            1B          2A          1A  \\n4            1B          2B           4  \\n..          ...         ...         ...  \\n248          1B          1B          1A  \\n249          1B          1B          1A  \\n250          1B          1B          2A  \\n251          1B          2A          1A  \\n0            1B          2A          1A  \\n\\n[253 rows x 9 columns]\",\r\n      \"text/html\": \"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>Código IE</th>\\n      <th>Dimensión 1</th>\\n      <th>Dimensión 2</th>\\n      <th>Dimensión 3</th>\\n      <th>Dimensión 4</th>\\n      <th>Dimensión 5</th>\\n      <th>Dimensión 6</th>\\n      <th>Dimensión 7</th>\\n      <th>Dimensión 8</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>0</td>\\n      <td>2A</td>\\n      <td>1B</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>2</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>3</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>3</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>4</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>5</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2B</td>\\n      <td>4</td>\\n    </tr>\\n    <tr>\\n      <th>...</th>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n    </tr>\\n    <tr>\\n      <th>248</th>\\n      <td>249</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>249</th>\\n      <td>250</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>250</th>\\n      <td>251</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n    </tr>\\n    <tr>\\n      <th>251</th>\\n      <td>252</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>0</th>\\n      <td>Moda</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p>253 rows × 9 columns</p>\\n</div>\"\r\n     },\r\n     \"execution_count\": 12,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"moda = marco.filter(regex='Dimen').mode(axis=0)\\n\",\r\n    \"moda['Código IE'] = 'Moda'\\n\",\r\n    \"marco = pd.concat([marco,moda])\\n\",\r\n    \"marco\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 13,\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"{'1A': 1, '1B': 2, '2A': 3, '2B': 4, '3': 5}\"\r\n     },\r\n     \"execution_count\": 13,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"niveles_num = dict(zip(['1A','1B', '2A', '2B', '3', '4', '5'],list(range(1,6))))\\n\",\r\n    \"num_niveles = dict(zip(list(range(1,6)), ['1A','1B', '2A', '2B', '3', '4', '5']))\\n\",\r\n    \"niveles_num\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 14,\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"    Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\\\\n0           1           0           0           0           4           1   \\n1           2           1           2           3           3           1   \\n2           3           1           2           3           5           1   \\n3           4           2           2           3           1           1   \\n4           5           1           2           1           4           1   \\n..        ...         ...         ...         ...         ...         ...   \\n248       249           1           2           1           4           1   \\n249       250           1           2           1           3           1   \\n250       251           1           2           1           4           1   \\n251       252           1           2           1           4           1   \\n0        Moda           1           2           1           3           1   \\n\\n    Dimensión 6 Dimensión 7 Dimensión 8  \\n0             0           3           2  \\n1             2           3           1  \\n2             2           3           1  \\n3             2           3           1  \\n4             2           4           4  \\n..          ...         ...         ...  \\n248           2           2           1  \\n249           2           2           1  \\n250           2           2           3  \\n251           2           3           1  \\n0             2           3           1  \\n\\n[253 rows x 9 columns]\",\r\n      \"text/html\": \"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>Código IE</th>\\n      <th>Dimensión 1</th>\\n      <th>Dimensión 2</th>\\n      <th>Dimensión 3</th>\\n      <th>Dimensión 4</th>\\n      <th>Dimensión 5</th>\\n      <th>Dimensión 6</th>\\n      <th>Dimensión 7</th>\\n      <th>Dimensión 8</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>4</td>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>3</td>\\n      <td>2</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>2</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>3</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>3</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>5</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>4</td>\\n      <td>2</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>1</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>5</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>1</td>\\n      <td>4</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>4</td>\\n      <td>4</td>\\n    </tr>\\n    <tr>\\n      <th>...</th>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n    </tr>\\n    <tr>\\n      <th>248</th>\\n      <td>249</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>1</td>\\n      <td>4</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>2</td>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>249</th>\\n      <td>250</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>1</td>\\n      <td>3</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>2</td>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>250</th>\\n      <td>251</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>1</td>\\n      <td>4</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>2</td>\\n      <td>3</td>\\n    </tr>\\n    <tr>\\n      <th>251</th>\\n      <td>252</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>1</td>\\n      <td>4</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>0</th>\\n      <td>Moda</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>1</td>\\n      <td>3</td>\\n      <td>1</td>\\n      <td>2</td>\\n      <td>3</td>\\n      <td>1</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p>253 rows × 9 columns</p>\\n</div>\"\r\n     },\r\n     \"execution_count\": 14,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"marco_num = marco.replace(niveles_num)\\n\",\r\n    \"marco_num\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 15,\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"  Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5 Dimensión 6  \\\\\\n0          1A          1B          1B          2A          1A          1B   \\n\\n  Dimensión 7 Dimensión 8 Código IE  \\n0          1B          1A  Promedio  \",\r\n      \"text/html\": \"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>Dimensión 1</th>\\n      <th>Dimensión 2</th>\\n      <th>Dimensión 3</th>\\n      <th>Dimensión 4</th>\\n      <th>Dimensión 5</th>\\n      <th>Dimensión 6</th>\\n      <th>Dimensión 7</th>\\n      <th>Dimensión 8</th>\\n      <th>Código IE</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>Promedio</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\"\r\n     },\r\n     \"execution_count\": 15,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"media = round(marco_num.filter(regex='Dimen*').astype(int).mean())\\n\",\r\n    \"media['Código IE'] = 'Promedio'\\n\",\r\n    \"media = media.replace(num_niveles)\\n\",\r\n    \"media = pd.DataFrame(media)\\n\",\r\n    \"media.T\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 16,\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"    Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\\\\n0           1           0           0           0          2B          1A   \\n1           2          1A          1B          2A          2A          1A   \\n2           3          1A          1B          2A           3          1A   \\n3           4          1B          1B          2A          1A          1A   \\n4           5          1A          1B          1A          2B          1A   \\n..        ...         ...         ...         ...         ...         ...   \\n249       250          1A          1B          1A          2A          1A   \\n250       251          1A          1B          1A          2B          1A   \\n251       252          1A          1B          1A          2B          1A   \\n0        Moda          1A          1B          1A          2A          1A   \\n0    Promedio          1A          1B          1B          2A          1A   \\n\\n    Dimensión 6 Dimensión 7 Dimensión 8  \\n0             0          2A          1B  \\n1            1B          2A          1A  \\n2            1B          2A          1A  \\n3            1B          2A          1A  \\n4            1B          2B           4  \\n..          ...         ...         ...  \\n249          1B          1B          1A  \\n250          1B          1B          2A  \\n251          1B          2A          1A  \\n0            1B          2A          1A  \\n0            1B          1B          1A  \\n\\n[254 rows x 9 columns]\",\r\n      \"text/html\": \"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>Código IE</th>\\n      <th>Dimensión 1</th>\\n      <th>Dimensión 2</th>\\n      <th>Dimensión 3</th>\\n      <th>Dimensión 4</th>\\n      <th>Dimensión 5</th>\\n      <th>Dimensión 6</th>\\n      <th>Dimensión 7</th>\\n      <th>Dimensión 8</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>0</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>0</td>\\n      <td>2A</td>\\n      <td>1B</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>2</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>3</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>3</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>4</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>5</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2B</td>\\n      <td>4</td>\\n    </tr>\\n    <tr>\\n      <th>...</th>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n      <td>...</td>\\n    </tr>\\n    <tr>\\n      <th>249</th>\\n      <td>250</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>250</th>\\n      <td>251</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n    </tr>\\n    <tr>\\n      <th>251</th>\\n      <td>252</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2B</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>0</th>\\n      <td>Moda</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n    </tr>\\n    <tr>\\n      <th>0</th>\\n      <td>Promedio</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>2A</td>\\n      <td>1A</td>\\n      <td>1B</td>\\n      <td>1B</td>\\n      <td>1A</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<p>254 rows × 9 columns</p>\\n</div>\"\r\n     },\r\n     \"execution_count\": 16,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"\\n\",\r\n    \"marco = pd.concat([marco,media.T])\\n\",\r\n    \"\\n\",\r\n    \"marco\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 17,\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"marco.to_excel('Marco acumulativo.xlsx', index=False)\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"outputs\": [],\r\n   \"source\": [],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"pycharm\": {\r\n     \"name\": \"#%%\\n\"\r\n    }\r\n   }\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 2\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython2\",\r\n   \"version\": \"2.7.6\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 0\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/utils/cleaners/Marco_consolidacion/Acumulativo.ipynb b/utils/cleaners/Marco_consolidacion/Acumulativo.ipynb
--- a/utils/cleaners/Marco_consolidacion/Acumulativo.ipynb	(revision dbccb369e2f8da6f6e57aad887777fd3d18cdee9)
+++ b/utils/cleaners/Marco_consolidacion/Acumulativo.ipynb	(date 1655876394837)
@@ -42,7 +42,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "D2 = pd.read_excel('Dimensión 2.xlsx')\n",
@@ -59,7 +59,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "D3 = pd.read_excel('Dimensión 3.xlsx')\n",
@@ -76,7 +76,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "D4 = pd.read_excel('Dimension 4.xlsx')\n",
@@ -93,7 +93,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "D5 = pd.read_excel('Dimensión 5.xlsx')\n",
@@ -110,7 +110,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "D6 = pd.read_excel('Dimensión 6.xlsx')\n",
@@ -127,7 +127,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "D7 = pd.read_excel('Dimensión 7.xlsx')\n",
@@ -144,7 +144,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "D8 = pd.read_excel('Dimensión 8.xlsx')\n",
@@ -161,7 +161,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": null,
    "outputs": [],
    "source": [
     "marco = pd.concat([D1,D2,D3,D4,D5,D6,D7,D8],ignore_index=False, axis=1)\n",
@@ -177,166 +177,10 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "     Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\n0            1           0           0           0          2B          1A   \n1            2          1A          1B          2A          2A          1A   \n2            3          1A          1B          2A           3          1A   \n3            4          1B          1B          2A          1A          1A   \n4            5          1A          1B          1A          2B          1A   \n..         ...         ...         ...         ...         ...         ...   \n247        248          1A          1B          1A          1A          1A   \n248        249          1A          1B          1A          2B          1A   \n249        250          1A          1B          1A          2A          1A   \n250        251          1A          1B          1A          2B          1A   \n251        252          1A          1B          1A          2B          1A   \n\n    Dimensión 6 Dimensión 7 Dimensión 8  \n0             0          2A          1B  \n1            1B          2A          1A  \n2            1B          2A          1A  \n3            1B          2A          1A  \n4            1B          2B           4  \n..          ...         ...         ...  \n247          1B          2A          1A  \n248          1B          1B          1A  \n249          1B          1B          1A  \n250          1B          1B          2A  \n251          1B          2A          1A  \n\n[252 rows x 9 columns]",
-      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Código IE</th>\n      <th>Dimensión 1</th>\n      <th>Dimensión 2</th>\n      <th>Dimensión 3</th>\n      <th>Dimensión 4</th>\n      <th>Dimensión 5</th>\n      <th>Dimensión 6</th>\n      <th>Dimensión 7</th>\n      <th>Dimensión 8</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>0</td>\n      <td>2A</td>\n      <td>1B</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>3</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2B</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>247</th>\n      <td>248</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>1A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>248</th>\n      <td>249</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>249</th>\n      <td>250</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>250</th>\n      <td>251</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n    </tr>\n    <tr>\n      <th>251</th>\n      <td>252</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n  </tbody>\n</table>\n<p>252 rows × 9 columns</p>\n</div>"
-     },
-     "execution_count": 11,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "marco"
-   ],
-   "metadata": {
-    "collapsed": false,
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   }
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 12,
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "    Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\n0           1           0           0           0          2B          1A   \n1           2          1A          1B          2A          2A          1A   \n2           3          1A          1B          2A           3          1A   \n3           4          1B          1B          2A          1A          1A   \n4           5          1A          1B          1A          2B          1A   \n..        ...         ...         ...         ...         ...         ...   \n248       249          1A          1B          1A          2B          1A   \n249       250          1A          1B          1A          2A          1A   \n250       251          1A          1B          1A          2B          1A   \n251       252          1A          1B          1A          2B          1A   \n0        Moda          1A          1B          1A          2A          1A   \n\n    Dimensión 6 Dimensión 7 Dimensión 8  \n0             0          2A          1B  \n1            1B          2A          1A  \n2            1B          2A          1A  \n3            1B          2A          1A  \n4            1B          2B           4  \n..          ...         ...         ...  \n248          1B          1B          1A  \n249          1B          1B          1A  \n250          1B          1B          2A  \n251          1B          2A          1A  \n0            1B          2A          1A  \n\n[253 rows x 9 columns]",
-      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Código IE</th>\n      <th>Dimensión 1</th>\n      <th>Dimensión 2</th>\n      <th>Dimensión 3</th>\n      <th>Dimensión 4</th>\n      <th>Dimensión 5</th>\n      <th>Dimensión 6</th>\n      <th>Dimensión 7</th>\n      <th>Dimensión 8</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>0</td>\n      <td>2A</td>\n      <td>1B</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>3</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2B</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>248</th>\n      <td>249</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>249</th>\n      <td>250</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>250</th>\n      <td>251</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n    </tr>\n    <tr>\n      <th>251</th>\n      <td>252</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Moda</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n  </tbody>\n</table>\n<p>253 rows × 9 columns</p>\n</div>"
-     },
-     "execution_count": 12,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "moda = marco.filter(regex='Dimen').mode(axis=0)\n",
-    "moda['Código IE'] = 'Moda'\n",
-    "marco = pd.concat([marco,moda])\n",
-    "marco"
-   ],
-   "metadata": {
-    "collapsed": false,
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   }
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 13,
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "{'1A': 1, '1B': 2, '2A': 3, '2B': 4, '3': 5}"
-     },
-     "execution_count": 13,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "niveles_num = dict(zip(['1A','1B', '2A', '2B', '3', '4', '5'],list(range(1,6))))\n",
-    "num_niveles = dict(zip(list(range(1,6)), ['1A','1B', '2A', '2B', '3', '4', '5']))\n",
-    "niveles_num"
-   ],
-   "metadata": {
-    "collapsed": false,
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   }
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 14,
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "    Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\n0           1           0           0           0           4           1   \n1           2           1           2           3           3           1   \n2           3           1           2           3           5           1   \n3           4           2           2           3           1           1   \n4           5           1           2           1           4           1   \n..        ...         ...         ...         ...         ...         ...   \n248       249           1           2           1           4           1   \n249       250           1           2           1           3           1   \n250       251           1           2           1           4           1   \n251       252           1           2           1           4           1   \n0        Moda           1           2           1           3           1   \n\n    Dimensión 6 Dimensión 7 Dimensión 8  \n0             0           3           2  \n1             2           3           1  \n2             2           3           1  \n3             2           3           1  \n4             2           4           4  \n..          ...         ...         ...  \n248           2           2           1  \n249           2           2           1  \n250           2           2           3  \n251           2           3           1  \n0             2           3           1  \n\n[253 rows x 9 columns]",
-      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Código IE</th>\n      <th>Dimensión 1</th>\n      <th>Dimensión 2</th>\n      <th>Dimensión 3</th>\n      <th>Dimensión 4</th>\n      <th>Dimensión 5</th>\n      <th>Dimensión 6</th>\n      <th>Dimensión 7</th>\n      <th>Dimensión 8</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>5</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>4</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>248</th>\n      <td>249</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>249</th>\n      <td>250</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>250</th>\n      <td>251</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>251</th>\n      <td>252</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Moda</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>253 rows × 9 columns</p>\n</div>"
-     },
-     "execution_count": 14,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "marco_num = marco.replace(niveles_num)\n",
-    "marco_num"
-   ],
-   "metadata": {
-    "collapsed": false,
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   }
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 15,
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "  Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5 Dimensión 6  \\\n0          1A          1B          1B          2A          1A          1B   \n\n  Dimensión 7 Dimensión 8 Código IE  \n0          1B          1A  Promedio  ",
-      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Dimensión 1</th>\n      <th>Dimensión 2</th>\n      <th>Dimensión 3</th>\n      <th>Dimensión 4</th>\n      <th>Dimensión 5</th>\n      <th>Dimensión 6</th>\n      <th>Dimensión 7</th>\n      <th>Dimensión 8</th>\n      <th>Código IE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>Promedio</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
-     },
-     "execution_count": 15,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "media = round(marco_num.filter(regex='Dimen*').astype(int).mean())\n",
-    "media['Código IE'] = 'Promedio'\n",
-    "media = media.replace(num_niveles)\n",
-    "media = pd.DataFrame(media)\n",
-    "media.T"
-   ],
-   "metadata": {
-    "collapsed": false,
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   }
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 16,
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "    Código IE Dimensión 1 Dimensión 2 Dimensión 3 Dimensión 4 Dimensión 5  \\\n0           1           0           0           0          2B          1A   \n1           2          1A          1B          2A          2A          1A   \n2           3          1A          1B          2A           3          1A   \n3           4          1B          1B          2A          1A          1A   \n4           5          1A          1B          1A          2B          1A   \n..        ...         ...         ...         ...         ...         ...   \n249       250          1A          1B          1A          2A          1A   \n250       251          1A          1B          1A          2B          1A   \n251       252          1A          1B          1A          2B          1A   \n0        Moda          1A          1B          1A          2A          1A   \n0    Promedio          1A          1B          1B          2A          1A   \n\n    Dimensión 6 Dimensión 7 Dimensión 8  \n0             0          2A          1B  \n1            1B          2A          1A  \n2            1B          2A          1A  \n3            1B          2A          1A  \n4            1B          2B           4  \n..          ...         ...         ...  \n249          1B          1B          1A  \n250          1B          1B          2A  \n251          1B          2A          1A  \n0            1B          2A          1A  \n0            1B          1B          1A  \n\n[254 rows x 9 columns]",
-      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Código IE</th>\n      <th>Dimensión 1</th>\n      <th>Dimensión 2</th>\n      <th>Dimensión 3</th>\n      <th>Dimensión 4</th>\n      <th>Dimensión 5</th>\n      <th>Dimensión 6</th>\n      <th>Dimensión 7</th>\n      <th>Dimensión 8</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>0</td>\n      <td>2A</td>\n      <td>1B</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>3</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2B</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>249</th>\n      <td>250</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>250</th>\n      <td>251</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n    </tr>\n    <tr>\n      <th>251</th>\n      <td>252</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2B</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Moda</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1A</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Promedio</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>2A</td>\n      <td>1A</td>\n      <td>1B</td>\n      <td>1B</td>\n      <td>1A</td>\n    </tr>\n  </tbody>\n</table>\n<p>254 rows × 9 columns</p>\n</div>"
-     },
-     "execution_count": 16,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "\n",
-    "marco = pd.concat([marco,media.T])\n",
-    "\n",
-    "marco"
-   ],
-   "metadata": {
-    "collapsed": false,
-    "pycharm": {
-     "name": "#%%\n"
-    }
-   }
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": null,
    "outputs": [],
    "source": [
-    "marco.to_excel('Marco acumulativo.xlsx', index=False)"
+    "marco"
    ],
    "metadata": {
     "collapsed": false,
